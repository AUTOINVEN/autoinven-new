<div class="info-card">
  <div class="colflex" id="dashChart">
    <div class="rowflex">
      <div class="main_chart">
        <div class="chart_row">
          <div class="graph_temp">
            <canvas id="chart_temp" width="350" height="350"></canvas>
          </div>
          <div class="graph_humidity">
            <canvas id="chart_humi" width="350" height="350"></canvas>
          </div>
        </div>
        <div class="chart_row">
          <div class="graph_co">
            <canvas id="chart_co" width="350" height="350"></canvas>
          </div>
          <div class="graph_lpg">
            <canvas id="chart_lpg" width="350" height="350"></canvas>
          </div>
        </div>
      </div>
      <div class="summary colflex">
        <div class="s_temp colflex">
          <div class="rowflex">
            <h3 class="summaryName" style="color: #36a2eb">
              <img src="/image/icon/temp.png" />Temperature
            </h3>
          </div>
          <div class="rowflex">
            <span>MAX</span>
            <span>MIN</span>
            <span>AVG</span>
          </div>
          <div class="rowflex realdata">
            <span id="maxTemp">0.0</span>
            <span id="minTemp">0.0</span>
            <span id="avgTemp">0.0</span>
          </div>
        </div>

        <div class="s_humi colflex">
          <div class="rowflex">
            <h3 class="summaryName" style="color: #8fbe96">
              <img src="/image/icon/humi.png" />Humidity
            </h3>
          </div>
          <div class="rowflex">
            <span>MAX</span>
            <span>MIN</span>
            <span>AVG</span>
          </div>
          <div class="rowflex realdata">
            <span id="maxHumi">0.0</span>
            <span id="minHumi">0.0</span>
            <span id="avgHumi">0.0</span>
          </div>
        </div>

        <div class="s_co colflex">
          <div class="rowflex">
            <h3 class="summaryName" style="color: #e04006">
              <img src="/image/icon/co.png" />CO
            </h3>
          </div>
          <div class="rowflex">
            <span>MAX</span>
            <span>MIN</span>
            <span>AVG</span>
          </div>
          <div class="rowflex realdata">
            <span id="maxCo">0.0</span>
            <span id="minCo">0.0</span>
            <span id="avgCo">0.0</span>
          </div>
        </div>

        <div class="s_lpg colflex">
          <div class="rowflex">
            <h3 class="summaryName" style="color: #f29d00">
              <img src="/image/icon/lpg.png" style="width: 12px" />LPG
            </h3>
          </div>
          <div class="rowflex">
            <span>MAX</span>
            <span>MIN</span>
            <span>AVG</span>
          </div>
          <div class="rowflex realdata">
            <span id="maxLpg">0.0</span>
            <span id="minLpg">0.0</span>
            <span id="avgLpg">0.0</span>
          </div>
        </div>
        <br />
      </div>
    </div>
  </div>
</div>

<script>
  let type = 1; //day, 2: month, 3:year
  // render를 통해 받아온 iotIP 할당

  iotIPAd = '<%= warehouse.iot_url%>';
  $(dayButton).css('background-color', '#ECEFF6');
  const today = new Date(); //오늘 날짜 받기
  //Years 선택 시 오늘 날짜는 입력이 안되는 문제 때문에 하루를 더해줌
  today.setDate(today.getDate() + 1);
  // charts 객체를 전장하기 위한 변수
  let charts = undefined;
  // Canvas를 지워주는 함수
  function clearCanvas() {
    charts['charts'][0].destroy();
    charts['charts'][1].destroy();
    charts['charts'][2].destroy();
    charts['charts'][3].destroy();
  }
  //currentDate input에 오늘 날짜 넣어주기(표준형태로)
  document.getElementById('currentDate').value = new Date()
    .toISOString()
    .substring(0, 10);
  // year 선택 시 나타나게 되는 datepick 미리 설정
  $('.datepicker')
    .datepicker({
      format: 'yyyy',
      viewMode: 'years',
      minViewMode: 'years',
      autoclose: 'true',
      showAnim: 'drop',
      showOptions: {
        direction: 'up',
      },
      endDate: today,
    })
    .on('changeDate', async function (e) {
      //값이 변경되면 Canvas 초기화 후에 데이터를 다시 받아와 그래프 그림
      clearCanvas();
      charts = await getSensorData(type, iotIPAd);
    });
  // 비동기로 첫 센서 데이터 받아오기 실행
  (async function () {
    charts = await getSensorData(type, iotIPAd);
  })();
  // 현재 날짜가 바뀌게 되면 Canvas 초기화 후에 데이터를 다시 받아와 그래프 그림
  $(currentDate).on('change', async function () {
    clearCanvas();
    charts = await getSensorData(type, iotIPAd);
  });
  // dayButton이 클릭되면, 특정 날짜를 기준으로 데이터 가져옴
  $(dayButton).on('click', async function () {
    if (type != 1) {
      $(currentDate).prop('type', 'date');
      document.getElementById('currentDate').value = new Date()
        .toISOString()
        .substring(0, 10);
      $(dayButton).css('background-color', '#ECEFF6');
      $(monthButton).css('background-color', '');
      $(yearButton).css('background-color', '');
      if (type == 3) {
        $(currentDate).css('display', '');
        $(currentYear).css('display', 'none');
      }
      type = 1;
      clearCanvas();
      charts = await getSensorData(type, iotIPAd);
    }
  });
  // monthButton이 클릭되면, 특정 월을 기준으로 데이터 가져옴
  $(monthButton).on('click', async function () {
    if (type != 2) {
      $(currentDate).prop('type', 'month');
      document.getElementById('currentDate').value = new Date()
        .toISOString()
        .slice(0, 7);
      $(dayButton).css('background-color', '');
      $(monthButton).css('background-color', '#ECEFF6');
      $(yearButton).css('background-color', '');
      if (type == 3) {
        $(currentDate).css('display', '');
        $(currentYear).css('display', 'none');
      }
      type = 2;
      clearCanvas();
      charts = await getSensorData(type, iotIPAd);
    }
  });
  // yearButton이 클릭되면, 특정 년을 기준으로 데이터 가져옴
  $(yearButton).on('click', async function () {
    if (type != 3) {
      $(currentDate).css('display', 'none');
      $(currentYear).css('display', '');
      $(dayButton).css('background-color', '');
      $(monthButton).css('background-color', '');
      $(yearButton).css('background-color', '#ECEFF6');
      type = 3;
      $('.datepicker').datepicker('setDate', new Date());
    }
  });
  $('.iot-top .title').text("<%= __('iot_Nav_Analytics') %>");
</script>
